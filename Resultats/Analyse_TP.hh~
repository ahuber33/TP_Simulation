float Param_Parabole(float masse, float charge, float Le1, float Le2, float E, float Lb1, float Lb2, float B)
{
  float Num = masse*E*((Le1*Le1)/2 + Le1*Le2);
  float Denum = charge*B*B*(((Lb1*Lb1)/2+Lb1*Lb2)*((Lb1*Lb1)/2+Lb1*Lb2));
  
  float param = Num/(1000*Denum);

  return param;

}


TGraph *Graph_Parabole(const char* filename, const char* TreeName)
{
  TFile* file = new TFile(filename);
  float x,y;
  TTree *Tree = (TTree*)file->Get(TreeName);
  Tree->SetBranchAddress("PositionX", &x);
  Tree->SetBranchAddress("PositionY", &y);
  const int Entries = Tree->GetEntries();

  float PosX[Entries];
  float PosY[Entries];

  for(int i=0; i<Entries; i++)
  {
    Tree->GetEntry(i);
    PosX[i] = x;
    PosY[i] = y;
  }

  TGraph* graph = new TGraph(Entries, PosX, PosY);

  return graph;
  
}
